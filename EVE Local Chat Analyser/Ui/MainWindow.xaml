<Window x:Class="EveLocalChatAnalyser.Ui.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ui="clr-namespace:EveLocalChatAnalyser.Ui"
        xmlns:properties="clr-namespace:EveLocalChatAnalyser.Properties"
        xmlns:gif="clr-namespace:WpfAnimatedGif;assembly=WpfAnimatedGif"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="Pirate's Little Helper"
        Height="{Binding Source={x:Static properties:Settings.Default}, Path=WindowSize.Height}"
        Width="{Binding Source={x:Static properties:Settings.Default}, Path=WindowSize.Width}"
        Left="{Binding Source={x:Static properties:Settings.Default}, Path=WindowPosition.X}"
        Top="{Binding Source={x:Static properties:Settings.Default}, Path=WindowPosition.Y}"
        Topmost="True"
        WindowStyle="None" AllowsTransparency="True"
        ResizeMode="CanResizeWithGrip" Closing="Window_Closing"
        MinWidth="280" MinHeight="16" SizeChanged="WindowSizeChanged" Style="{DynamicResource MainWindowStyle}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Themes/EveUiWindowStyle.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Background" Value="Gainsboro"></Setter>
                <Setter Property="Padding" Value="2,0,2,0"></Setter>
            </Style>


            <BitmapImage x:Key="FactionWarfareImage" UriSource="..\Resources\faction_warfare.png" />
            <BitmapImage x:Key="Caldari32Image" UriSource="..\Resources\caldari_32.png" />
            <BitmapImage x:Key="Minmatar32Image" UriSource="..\Resources\minmatar_32.png" />
            <BitmapImage x:Key="Gallente32Image" UriSource="..\Resources\gallente_32.png" />
            <BitmapImage x:Key="Amarr32Image" UriSource="..\Resources\amarr_32.png" />
            <BitmapImage x:Key="EmptyImage" UriSource="..\Resources\empty.png" />
            <BitmapImage x:Key="CloseImage" UriSource="..\Resources\x_11x11.png" />
            <BitmapImage x:Key="CogImage" UriSource="..\Resources\cog_16x16.png" />
            <BitmapImage x:Key="ClearImage" UriSource="..\Resources\clear.png" />
            <BitmapImage x:Key="MinimizeImage" UriSource="..\Resources\minimize.png" />
            <BitmapImage x:Key="DScanImage" UriSource="..\Resources\dscan.png" />
            <BitmapImage x:Key="ProbeImage" UriSource="..\Resources\probe.png" />
            <BitmapImage x:Key="AmarrImage" UriSource="..\Resources\amarr.png" />
            <BitmapImage x:Key="CaldariImage" UriSource="..\Resources\caldari.png" />
            <BitmapImage x:Key="GallenteImage" UriSource="..\Resources\gallente.png" />
            <BitmapImage x:Key="MinmatarImage" UriSource="..\Resources\minmatar.png" />
            <BitmapImage x:Key="GankImage" UriSource="..\Resources\gank.png" />
            <BitmapImage x:Key="CarebearImage" UriSource="..\Resources\carebear.png" />
            <BitmapImage x:Key="SmartbombImage" UriSource="..\Resources\smartbomb.png" />
            <BitmapImage x:Key="GanglinkImage" UriSource="..\Resources\ganglink.png" />
            <BitmapImage x:Key="CynoImage" UriSource="..\Resources\cyno.png" />
            <BitmapImage x:Key="ECMImage" UriSource="..\Resources\ecm.png" />
            <BitmapImage x:Key="LoadedImage" UriSource="..\Resources\check.png" />
            <BitmapImage x:Key="EarthquakeRelief" UriSource="..\Resources\earthquake_relief.png" />
            <BitmapImage x:Key="RightArrowImage" UriSource="..\Resources\arrowright32.png" />
            <BitmapImage x:Key="LeftArrowImage" UriSource="..\Resources\leftarrow32.png" />
            <BitmapImage x:Key="SupermanImage" UriSource="..\Resources\superman.png" />
            <Style TargetType="Window" x:Key="MainWindowStyle">
                <!--<Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource WindowBackground}" />
                    </Setter.Value>
                </Setter>-->
                <Setter Property="Topmost" Value="True"></Setter>
                <Setter Property="WindowStyle" Value="None"></Setter>
                <Setter Property="AllowsTransparency" Value="True"></Setter>
                <Setter Property="ResizeMode" Value="CanResize"></Setter>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FontSize"
                        Value="{Binding Source={x:Static properties:Settings.Default}, Path=FontSize}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Window">
                            <Grid Background="{DynamicResource WindowBackgroundBrush}">
                                <Grid Margin="2,0,2,2" SizeChanged="OnWindowSizeChanged" Loaded="OnWindowLoaded">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                    </Grid.RowDefinitions>


                                    <Grid Grid.Row="0" ZIndex="50">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="14"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Image x:Name="WindowIcon"  MouseMove="OnBorderMouseMove"
                                                   MouseLeftButtonDown="MoveWindow"
                                               Source="{Binding RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Icon}"
                                               Grid.Column="0" Width="24" Height="24" Margin="0,0,0,-20" Stretch="Fill">
                                        </Image>
                                        <TextBlock Grid.Column="1" Foreground="LightGray"
                                                   Text="{Binding RelativeSource= {RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},Path=Title}"
                                                   x:Name="TextWindowTitle"
                                                   HorizontalAlignment="Stretch"
                                                   Margin="2,0,0,0" MouseMove="OnBorderMouseMove"
                                                   MouseLeftButtonDown="MoveWindow"
                                                   FontSize="12" />
                                        <StackPanel Grid.Column="2" Orientation="Horizontal">

                                            <Button x:Name="Forward"
                                                    Grid.Column="1" IsEnabled="{Binding History.HasPrevious}"
                                                    Click="Forward_Click" ToolTip="Go forward in scan history">
                                                
                                                <StackPanel>
                                                    <Image Height="11" Width="Auto"
                                                           Source="{StaticResource LeftArrowImage}">
                                                        <Image.Style>
                                                            <Style TargetType="Image">
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.5" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </StackPanel>
                                            </Button>
                                            <Button x:Name="Back"
                                                    Grid.Column="2"
                                                    IsEnabled="{Binding History.HasNext}" Click="Back_Click"
                                                    ToolTip="Go backward in scan history">
                                               
                                                <StackPanel>
                                                    <Image Height="11" Width="Auto"
                                                           Source="{StaticResource RightArrowImage}">
                                                        <Image.Style>
                                                            <Style TargetType="Image">
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" Value="0.5" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </StackPanel>
                                            </Button>


                                            <Button x:Name="ClearBtn"
                                                    Margin="3,0,0,0"
                                                    Click="ClearClicked" ToolTip="Clear">
                                                <Image Source="../Resources/trash_d3d3d3_32.png" Height="11" MaxWidth="12"></Image>
                                                
                                            </Button>
                                            <Button x:Name="BtnProbeScan"
                                                    Grid.Column="5"
                                                    Click="BtnProbeScanClicked" ToolTip="Probe Scan History Comparator"
                                                    Margin="2,0,0,0">
                                                <Image Source="{StaticResource ProbeImage}" Height="11" MaxWidth="12"></Image>
                                                
                                            </Button>

                                            <Button x:Name="RangeScanBtn"
                                                    Grid.Column="6" FontWeight="Bold" Padding="2,0" Margin="2,0,0,0"
                                                    Click="DScanLocatorClick" ToolTip="DScan Locator">
                                                <Image Source="../Resources/wifi_d3d3d3_32.png" Height="11" MaxWidth="10"></Image>
                                               
                                            </Button>
                                            <Button x:Name="MapBtn"
                                                    Grid.Column="6" FontWeight="Bold" Padding="2,0" Margin="3,0,0,0"
                                                    Click="BtnMapClick" ToolTip="Map">
                                                <Image Source="{StaticResource MapImage}" Height="12" MaxWidth="14"></Image>
                                               
                                            </Button>
                                            <Button x:Name="InfoBtn"
                                                    Grid.Column="8" ToolTip="About" Padding="2,0" Margin="3,0,0,0" FontWeight="Bold" Click="InfoClick"
                                                    FontSize="11">
                                                <Image Source="../Resources/info-circle_d3d3d3_32.png" Height="12" MaxWidth="14"></Image>
                                            </Button>
                                            <Button x:Name="SettingsBtn" Click="SettingsClick" ToolTip="Settings"
                                                    Padding="2,0" Margin="1,0,0,0">
                                                <Image Source="../Resources/cog_d3d3d3_32.png" Height="11"></Image>
                                               
                                            </Button>
                                        </StackPanel>
                                        <Button Grid.Column="3" HorizontalAlignment="Right" Width="14" Margin="2,0,0,0"
                                                VerticalAlignment="Top"
                                                x:Name="BtnMinimizeWindow" Click="MinimizeWindow">
                                            <Button.Style>
                                                <Style>
                                                    <Setter Property="Button.Background" Value="Transparent" />
                                                    <Setter Property="Button.Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>


                                                                <ContentPresenter x:Name="ContentPresenter"
                                                                                  Margin="{TemplateBinding Padding}"
                                                                                  Content="{TemplateBinding Button.Content}"
                                                                                  ContentTemplate="{TemplateBinding Button.ContentTemplate}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                            <Image x:Name="MinimizeImage" Source="{StaticResource MinimizeImage}"
                                                   Width="12">
                                            </Image>
                                        </Button>
                                        <Button Grid.Column="4" HorizontalAlignment="Right" Width="14" Margin="2,0,0,0"
                                                VerticalAlignment="Top"
                                                x:Name="BtnMaximizeWindow" Click="MaximizeWindow">
                                            <Button.Style>
                                                <Style>
                                                    <Setter Property="Button.Background" Value="Transparent" />
                                                    <Setter Property="Button.Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>


                                                                <ContentPresenter x:Name="ContentPresenter"
                                                                                  Margin="{TemplateBinding Padding}"
                                                                                  Content="{TemplateBinding Button.Content}"
                                                                                  ContentTemplate="{TemplateBinding Button.ContentTemplate}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                            <Image x:Name="MaximizeImage" Source="{StaticResource ResizeFullImage}"
                                                   Width="12">
                                            </Image>
                                        </Button>
                                        <Button Grid.Column="5" HorizontalAlignment="Right" Width="14" Margin="2,0,0,0"
                                                VerticalAlignment="Top"
                                                x:Name="BtnCloseWindow" Click="CloseWindow">
                                            <Button.Style>
                                                <Style>
                                                    <Setter Property="Button.Background" Value="Transparent" />
                                                    <Setter Property="Button.Foreground" Value="LightGray" />
                                                    <Setter Property="Button.BorderThickness" Value="0" />
                                                    <Setter Property="Button.Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>


                                                                <ContentPresenter x:Name="ContentPresenter"
                                                                                  Margin="{TemplateBinding Padding}"
                                                                                  Content="{TemplateBinding Button.Content}"
                                                                                  ContentTemplate="{TemplateBinding Button.ContentTemplate}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                            <Image Source="{StaticResource RemoveImage}" Width="12"></Image>
                                        </Button>
                                        

                                    </Grid>
                                    <Line Grid.Row="1" Grid.ColumnSpan="6" Margin="0,2,0,0"
                                          VerticalAlignment="Center" StrokeThickness="1"
                                          X2="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}}">
                                        <Line.Stroke>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Offset="0" Color="{StaticResource WindowBackground}" />
                                                <GradientStop Offset=".5" Color="#1F5569" />
                                                <GradientStop Offset="1" Color="{StaticResource WindowBackground}" />
                                            </LinearGradientBrush>
                                        </Line.Stroke>
                                    </Line>
                                    <AdornerDecorator Grid.Row="2">
                                        <ContentPresenter
                                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                            Content="{TemplateBinding ContentControl.Content}" />
                                    </AdornerDecorator>


                                </Grid>
                                <Line X1="0" X2="3" HorizontalAlignment="Left" VerticalAlignment="Top" StrokeThickness="2" Stroke="White"></Line>
                                <Line Y1="0" Y2="3" HorizontalAlignment="Left" VerticalAlignment="Top" StrokeThickness="2" Stroke="White"></Line>

                                <Line X1="0" X2="3" HorizontalAlignment="Left" VerticalAlignment="Bottom" StrokeThickness="1" Stroke="White"></Line>
                                <Line Y1="0" Y2="3" HorizontalAlignment="Left" VerticalAlignment="Bottom" StrokeThickness="2" Stroke="White"></Line>


                                <Line X1="0" X2="-3" HorizontalAlignment="Right" VerticalAlignment="Top" StrokeThickness="2" Stroke="White"></Line>
                                <Line Y1="0" Y2="3" HorizontalAlignment="Right" VerticalAlignment="Top" StrokeThickness="1" Stroke="White"></Line>



                                <Line X1="0" X2="-3" HorizontalAlignment="Right" VerticalAlignment="Bottom" StrokeThickness="1" Stroke="White"></Line>
                                <Line Y1="0" Y2="3" HorizontalAlignment="Right" VerticalAlignment="Bottom" StrokeThickness="1" Stroke="White"></Line>

                                <Rectangle x:Name="leftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="3"
                                           HorizontalAlignment="Left" />
                                <Rectangle x:Name="rightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="3"
                                           HorizontalAlignment="Right" />
                                <Rectangle x:Name="topSizeGrip" Style="{StaticResource RectBorderStyle}" Height="3"
                                           VerticalAlignment="Top" />
                                <Rectangle x:Name="bottomSizeGrip" Style="{StaticResource RectBorderStyle}" Height="3"
                                           VerticalAlignment="Bottom" />
                                <!--Corners -->
                                <Rectangle Name="topLeftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7"
                                           Height="7"
                                           HorizontalAlignment="Left" VerticalAlignment="Top" />
                                <Rectangle Name="bottomRightSizeGrip" Style="{StaticResource RectBorderStyle}"
                                           Width="7"
                                           Height="7" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
                                <Rectangle Name="topRightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7"
                                           Height="7" HorizontalAlignment="Right" VerticalAlignment="Top" />
                                <Rectangle Name="bottomLeftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7"
                                           Height="7" HorizontalAlignment="Left" VerticalAlignment="Bottom" />

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--<Style x:Key="itemstyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="ToolTipService.ShowDuration" Value="10000"></Setter>
                <Setter Property="ToolTipService.HasDropShadow" Value="False"></Setter>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Padding="0" BorderThickness="0" Background="Transparent" BorderBrush="Transparent">
                            <ui:KillboardInformationControl />
                        </ToolTip>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="{Binding ContainerBackgroundBrush}" />
                <EventSetter Event="MouseDoubleClick" Handler="HandleDoubleClick" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Foreground" Value="{Binding ForegroundBrush}"></Setter>
                <Setter Property="Visibility" Value="{Binding Visibility}"></Setter>
            </Style>-->
        </ResourceDictionary>
    </Window.Resources>

    <Window.Icon>../Resources/plh_parrot.png</Window.Icon>
    <Grid x:Name="ContentGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="14*"></ColumnDefinition>
            <ColumnDefinition Width="57*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" MinHeight="20" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <DockPanel Grid.ColumnSpan="2" >

<!--TODO remove code duplication mit localtablecontrol-->
            <xctk:BusyIndicator IsBusy="False" x:Name="BusyIndicator">
                <DataGrid BorderThickness="0"
                          FontSize="{Binding Source={x:Static properties:Settings.Default},Path=FontSize}"
                          ItemsSource="{Binding Characters}"
                          x:Name="DataMain"
                          CanUserSortColumns="True"
                          CanUserAddRows="False"
                          AutoGenerateColumns="False"
                          IsReadOnly="True"
                          GridLinesVisibility="None"
                          Background="Transparent"
                          RowHeaderWidth="0"
                          SelectionChanged="lstMain_SelectionChanged"
                          MouseMove="lstMain_MouseMove">
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource EveUiDataGridColumnHeader}">
                            <Setter Property="Margin" Value="0,-3,0,0"></Setter>
                            <Setter Property="Background" Value="Gainsboro"></Setter>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="BorderThickness" Value="0"></Setter>
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
                            <Setter Property="Background" Value="{Binding BackgroundColor}"></Setter>
                            <Setter Property="Foreground" Value="{Binding ForegroundColor}"></Setter>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="ToolTipService.ShowDuration" Value="10000"></Setter>
                            <Setter Property="ToolTipService.HasDropShadow" Value="False"></Setter>
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <ToolTip Padding="0">
                                        <ui:KillboardInformationControl />
                                    </ToolTip>
                                </Setter.Value>
                            </Setter>
                            <EventSetter Event="MouseDoubleClick" Handler="HandleDoubleClick" />
                            <Setter Property="Foreground" Value="{Binding ForegroundColor}"></Setter>
                            <Setter Property="Visibility" Value="{Binding Visibility}"></Setter>
                            <Setter Property="Background" Value="{Binding BackgroundColor}"></Setter>
                            <Setter Property="Margin" Value="0,0,0,0"></Setter>
                            <Setter Property="BorderThickness" Value="0"></Setter>
                            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                            <Setter Property="FontSize"
                                    Value="{Binding Source={x:Static properties:Settings.Default},Path=FontSize}" />
                        </Style>

                    </DataGrid.RowStyle>
                    <DataGrid.ContextMenu>
                        <ContextMenu >
                            <MenuItem Header="Refresh Killboard Information" Click="ReloadKillboardInformation_Clicked"  />
                            <Separator></Separator>
                            <MenuItem Header="Set Own Icon" Click="SetCustomIcon_Clicked"  />
                            <MenuItem Header="Remove Own Icon" Click="RemoveCustomIcon_Clicked"  />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn
                            Width="{Binding Source={x:Static properties:Settings.Default},Path=FontSize}"
                            Visibility="{Binding Source={x:Static properties:ActiveProfile.Default}, Path=IsShowingFaction, Converter={StaticResource VisibilityConverter}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image SnapsToDevicePixels="True"
                                           Height="{Binding Source={x:Static properties:Settings.Default},Path=FontSize}"
                                           Stretch="Uniform" gif:ImageBehavior.RepeatBehavior="Forever"
                                           gif:ImageBehavior.AnimatedSource="{Binding FactionImage}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn
                            Width="{Binding Source={x:Static properties:Settings.Default},Path=FontSize}"
                            Visibility="{Binding Source={x:Static properties:Settings.Default}, Path=IsUsingKillboardAnalysis, Converter={StaticResource VisibilityConverter}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image
                                        Height="{Binding Source={x:Static properties:Settings.Default},Path=FontSize}"
                                        SnapsToDevicePixels="True" Stretch="Uniform"
                                        gif:ImageBehavior.RepeatBehavior="Forever"
                                        gif:ImageBehavior.AnimatedSource="{Binding Image}" />

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="SizeToCells"
                                            FontSize="{Binding Source={x:Static properties:Settings.Default},Path=FontSize}">
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Corp" Binding="{Binding CorporationInfo}" Width="SizeToCells"
                                            FontSize="{Binding Source={x:Static properties:Settings.Default},Path=FontSize}">
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Ally" Binding="{Binding AllianceInfo}" Width="SizeToCells"
                                            FontSize="{Binding Source={x:Static properties:Settings.Default},Path=FontSize}">
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Coalition" Binding="{Binding CoalitionInfo}" Width="SizeToCells"
                                            Visibility="{Binding Source={x:Static properties:Settings.Default}, Path=IsShowingCoalitionsColumn, Converter={StaticResource VisibilityConverter}}"
                                            FontSize="{Binding Source={x:Static properties:Settings.Default},Path=FontSize}">
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>

            </xctk:BusyIndicator>
        </DockPanel>


        <GridSplitter
            ResizeDirection="Rows"
            Grid.Column="0"
            Width="Auto"
            Height="3"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            x:Name="SplitterAdjacentSystems"
            Visibility="Collapsed" Grid.ColumnSpan="2" Grid.Row="1"/>


        <Grid VerticalAlignment="Stretch" Visibility="Collapsed" x:Name="DockAjacentSystems" Grid.ColumnSpan="2" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <DataGrid Grid.Column="0" FontSize="{Binding Source={x:Static properties:Settings.Default},Path=FontSize}"
                      CanUserAddRows="False" IsReadOnly="True" AlternationCount="2" BorderThickness="0"
                      x:Name="DataAdjacentSystems" ColumnHeaderHeight="16"
                      SelectionChanged="LstAdjacentSystems_SelectionChanged" AutoGenerateColumns="False" ColumnHeaderStyle="{DynamicResource EveUiDataGridColumnHeader}">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource EveUiDataGridRow}">
                        <!--<Setter Property="Background" Value="White" />-->
                        <Setter Property="ToolTipService.ShowDuration" Value="10000"></Setter>
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="Smartbomb pod kills in the last 3h/48h: {0}/{1}">
                                            <Binding Path="SmartbombPoddingCountVeryRecent"></Binding>
                                            <Binding Path="SmartbombPoddingCount"></Binding>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <Trigger Property="AlternationIndex" Value="1">
                                <Setter Property="Background" Value="{DynamicResource ContainerBackgroundFocused}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding HasSmartbombPodding}" Value="True">
                                <Setter Property="Background" Value="LightPink"></Setter>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell" BasedOn="{StaticResource EveDataGridCellStyle}">
                        <Setter Property="Padding" Value="2,0,2,0"></Setter>
                        <Setter Property="Margin" Value="0"></Setter>

                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="System" Binding="{Binding SolarSystemName}" Width="SizeToCells"></DataGridTextColumn>
                    <DataGridTextColumn Header="Kills 1h" Binding="{Binding KillCountFromTheLastHour}"
                                        Width="SizeToHeader">
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Sec" Binding="{Binding SolarSystemSecurityFormatted}"
                                        Width="SizeToCells">
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

            <GridSplitter
                ResizeDirection="Columns"
                Grid.Column="1"
                Width="3"
                Height="Auto"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Margin="0" />
<!--TODO extract as own widget-->
            <ScrollViewer x:Name="ScrollKills" Grid.Column="2" PreviewMouseWheel="ScrollKills_PreviewMouseWheel" Background="Transparent" BorderBrush="Transparent" Style="{DynamicResource NuclearScrollViewer}">
                <DataGrid x:Name="DataKills"
                          FontSize="{Binding Source={x:Static properties:Settings.Default},Path=FontSize}"
                          ColumnHeaderHeight="16" IsReadOnly="True" AutoGenerateColumns="False"
                         VerticalScrollBarVisibility="Disabled" ColumnHeaderStyle="{DynamicResource EveUiDataGridColumnHeader}">
                    <DataGrid.AlternatingRowBackground>
                        <SolidColorBrush Color="{DynamicResource ContainerBackgroundFocused}"></SolidColorBrush>
                    </DataGrid.AlternatingRowBackground>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Time" Binding="{Binding KillTime}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Ship" Binding="{Binding VictimShip}"></DataGridTextColumn>
                        <DataGridTextColumn Header="#Attackers" Binding="{Binding AttackerCount}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Victim" Binding="{Binding VictimName}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Corp" Binding="{Binding VictimCorporation}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Ally" Binding="{Binding VictimAlliance}"></DataGridTextColumn>
                    </DataGrid.Columns>
                    <DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <StackPanel Margin="4" Background="{DynamicResource ContainerBackgroundBrush}">
                                <Label Content="Attackers:" Foreground="White"></Label>
                                <DataGrid ItemsSource="{Binding Attackers}" AutoGenerateColumns="False"
                                          IsReadOnly="True" RowBackground="{DynamicResource ContainerBackgroundBrush}"
                                          VerticalScrollBarVisibility="Disabled">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Ship" Binding="{Binding ShipName}"></DataGridTextColumn>
                                        <DataGridTextColumn Header="Name" Binding="{Binding CharacterName}"></DataGridTextColumn>
                                        <DataGridTextColumn Header="Corp" Binding="{Binding CorporationName}"></DataGridTextColumn>
                                        <DataGridTextColumn Header="Alliance" Binding="{Binding AllianceName}"></DataGridTextColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </StackPanel>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>
                </DataGrid>
            </ScrollViewer>
        </Grid>


        <TextBlock FontSize="{Binding Source={x:Static properties:Settings.Default},Path=FontSize}" Visibility="{Binding History.Visibility}" Background="{DynamicResource ContainerBackgroundBrush}"
                   Text="{Binding History.Current, Converter={StaticResource HistoryConverter}}" TextAlignment="Center" Grid.ColumnSpan="2" Grid.Row="3"/>
    </Grid>

</Window>